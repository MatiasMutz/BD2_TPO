# Informe del Proyecto - Sistema de Gestión de Base de Datos MongoDB y Neo4j

## 📋 Descripción General

Este proyecto implementa un sistema completo para gestionar clientes, facturas, productos y teléfonos utilizando MongoDB y Neo4j como bases de datos. El sistema está desarrollado en Node.js y permite realizar diversas operaciones y consultas sobre los datos almacenados.

## 🏗️ Arquitectura

### Estructura de Datos
El sistema maneja 5 entidades principales:

1. **Clientes**
- Número de cliente (único)
- Nombre
- Apellido  
- Dirección
- Estado activo

2. **Productos**
- Código de producto (único)
- Marca
- Nombre
- Descripción
- Precio
- Stock

3. **Facturas** 
- Número de factura (único)
- Fecha
- Total sin IVA
- IVA
- Total con IVA
- Número de cliente

4. **Detalles de Factura**
- Número de factura
- Código de producto
- Número de ítem
- Cantidad

5. **Teléfonos**
- Código de área
- Número de teléfono
- Tipo
- Número de cliente

### Modelos
Los modelos están definidos usando Mongoose para MongoDB y tienen sus equivalentes en Neo4j.

### Conexiones a Bases de Datos
El sistema maneja conexiones tanto a MongoDB como a Neo4j, utilizando las credenciales apropiadas y manejando la conexión/desconexión de manera segura.

## 🚀 Funcionalidades Principales

### 1. Gestión de Clientes
- Crear nuevos clientes
- Modificar datos de clientes existentes
- Consultar clientes con/sin facturas
- Obtener clientes con sus teléfonos

### 2. Gestión de Productos
- Crear nuevos productos
- Modificar productos existentes
- Consultar productos facturados

### 3. Gestión de Facturas
- Consultar facturas por cliente
- Ver productos facturados
- Obtener totales de facturación por cliente

## 📊 Consultas Implementadas

El sistema implementa consultas equivalentes tanto en MongoDB como en Neo4j:

1. **Consultas de Clientes**
- Obtener clientes con sus teléfonos
- Listar clientes con/sin facturas
- Obtener total gastado por cliente
- Obtener cantidad de facturas por cliente

2. **Consultas de Productos**
- Listar productos facturados
- Obtener productos de marca específica
- Ver detalles de facturación por producto

## 🛠️ Utilidades y Herramientas

### Inicialización de Base de Datos
El sistema incluye scripts para inicializar las bases de datos con datos de prueba, asegurando la consistencia entre ambas bases de datos.

### Ayuda y Documentación
Incluye sistema de ayuda integrado para consultar comandos disponibles y ejemplos de uso.

## 📌 Conclusiones

El proyecto demuestra una implementación robusta de un sistema de gestión utilizando dos bases de datos diferentes:
- MongoDB para almacenamiento de documentos
- Neo4j para manejo de relaciones entre entidades

La arquitectura permite escalar fácilmente añadiendo nuevas funcionalidades y consultas, manteniendo la consistencia entre ambas bases de datos.

## 🔧 Mejoras Potenciales

1. Implementar validación de datos más robusta
2. Añadir manejo de transacciones
3. Implementar sistema de caché
4. Mejorar el manejo de errores
5. Añadir tests automatizados 